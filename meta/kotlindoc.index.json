{
  "ownKey": "kotlindoc",
  "childrenPages": {"kotlindoc": {
    "ownKey": "kotlindoc",
    "childrenPages": {"io": {
      "ownKey": "io",
      "childrenPages": {"github": {
        "ownKey": "github",
        "childrenPages": {"plume": {
          "ownKey": "plume",
          "childrenPages": {"oss": {
            "ownKey": "oss",
            "childrenPages": {
              "graphio": {
                "ownKey": "graphio",
                "childrenPages": {
                  "graphmlwriter": {
                    "ownKey": "graphmlwriter",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/graphio/graphmlwriter",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/graphio/graphmlwriter"
                      },
                      "description": "",
                      "title": "GraphMLWriter",
                      "content": "<p>Responsible for writing <a href=\"#\">Graph<\/a> objects to an <a href=\"https://docs.oracle.com/javase/6/docs/api/java/io/OutputStreamWriter.html\">OutputStreamWriter<\/a> in GraphML format.<\/p>write\n<p>Given a <a href=\"#\">Graph<\/a> object, serializes it to <a href=\"http://graphml.graphdrawing.org/specification/dtd.html\">GraphML<\/a>\nformat to the given <a href=\"https://docs.oracle.com/javase/6/docs/api/java/io/OutputStreamWriter.html\">OutputStreamWriter<\/a>. This format is supported by\n<a href=\"https://tinkerpop.apache.org/docs/current/reference/#graphml\">TinkerGraph<\/a> and\n<a href=\"http://manual.cytoscape.org/en/stable/Supported_Network_File_Formats.html#graphml\">Cytoscape<\/a>.<\/p>\n"
                    }]
                  },
                  "graphsonwriter": {
                    "ownKey": "graphsonwriter",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/graphio/graphsonwriter",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/graphio/graphsonwriter"
                      },
                      "description": "",
                      "title": "GraphSONWriter",
                      "content": "<p>Responsible for writing <a href=\"#\">Graph<\/a> objects to an <a href=\"https://docs.oracle.com/javase/6/docs/api/java/io/OutputStreamWriter.html\">OutputStreamWriter<\/a> in GraphSON format. Note that GraphSON format\nis a more space-expensive format.<\/p>write\n<p>Given a <a href=\"#\">Graph<\/a> object, serializes it to\n<a href=\"https://github.com/tinkerpop/blueprints/wiki/GraphSON-Reader-and-Writer-Libraryl\">GraphSON<\/a>\nformat to the given <a href=\"https://docs.oracle.com/javase/6/docs/api/java/io/OutputStreamWriter.html\">OutputStreamWriter<\/a>. This format is supported by\n<a href=\"https://tinkerpop.apache.org/docs/current/reference/#graphson\">TinkerGraph<\/a> and suited for web responses.<\/p>\n"
                    }]
                  }
                },
                "ownPages": [{
                  "reference": {
                    "path": "kotlindoc",
                    "baseUrl": "https://plume-oss.github.io/plume",
                    "fileName": "io/github/plume/oss/graphio",
                    "extension": "html",
                    "usePrettyUrl": true,
                    "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/graphio"
                  },
                  "description": "",
                  "title": "io.github.plume.oss.graphio",
                  "content": "<p>GraphMLWriter<\/p>\n<p>Responsible for writing <a href=\"#\">Graph<\/a> objects to an <a href=\"https://docs.oracle.com/javase/6/docs/api/java/io/OutputStreamWriter.html\">OutputStreamWriter<\/a> in GraphML format.<\/p>\nGraphSONWriter\n<p>Responsible for writing <a href=\"#\">Graph<\/a> objects to an <a href=\"https://docs.oracle.com/javase/6/docs/api/java/io/OutputStreamWriter.html\">OutputStreamWriter<\/a> in GraphSON format. Note that GraphSON format\nis a more space-expensive format.<\/p>\n"
                }]
              },
              "passes": {
                "ownKey": "passes",
                "childrenPages": {
                  "method": {
                    "ownKey": "method",
                    "childrenPages": {"methodstubpass": {
                      "ownKey": "methodstubpass",
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc",
                          "baseUrl": "https://plume-oss.github.io/plume",
                          "fileName": "io/github/plume/oss/passes/method/methodstubpass",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/method/methodstubpass"
                        },
                        "description": "",
                        "title": "MethodStubPass",
                        "content": "<p>Builds the method stubs which includes modifiers, parameters, and method returns.<\/p><init>\n<p>Builds the method stubs which includes modifiers, parameters, and method returns.<\/p>\nrunPass\n<p>Builds method stubs and connects them to their respective TYPE_DECLs, i.e.<\/p><pre><code>    TYPE_DECL -AST-> METHOD\n    TYPE_DECL -CONTAINS-> CONTAINS\n    METHOD -SOURCE_FILE-> FILE<\/code><\/pre>\n"
                      }]
                    }},
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/passes/method",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/method"
                      },
                      "description": "",
                      "title": "io.github.plume.oss.passes.method",
                      "content": "<p>MethodStubPass<\/p>\n<p>Builds the method stubs which includes modifiers, parameters, and method returns.<\/p>\n"
                    }]
                  },
                  "scpgpass": {
                    "ownKey": "scpgpass",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/passes/scpgpass",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/scpgpass"
                      },
                      "description": "",
                      "title": "SCPGPass",
                      "content": "<p>Runs passes from <a href=\"#\">io.shiftleft.dataflowengineoss.passes<\/a> over method bodies.<\/p><init>\n<p>Runs passes from <a href=\"#\">io.shiftleft.dataflowengineoss.passes<\/a> over method bodies.<\/p>\nrunPass\n<p>Calls SCPG passes. Converges all methods into a local OverflowDB graph instance. This is done in parallel.<\/p>\n"
                    }]
                  },
                  "iprogramstructurepass": {
                    "ownKey": "iprogramstructurepass",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/passes/iprogramstructurepass",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/iprogramstructurepass"
                      },
                      "description": "",
                      "title": "IProgramStructurePass",
                      "content": "<p>A pass that builds CPG program structure from <a href=\"#\">SootClass<\/a> objects.<\/p>runPass\n<p>Builds the program structure.<\/p>\n"
                    }]
                  },
                  "iunitgraphpass": {
                    "ownKey": "iunitgraphpass",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/passes/iunitgraphpass",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/iunitgraphpass"
                      },
                      "description": "",
                      "title": "IUnitGraphPass",
                      "content": "<p>A pass that builds CPG method bodies from <a href=\"#\">BriefUnitGraph<\/a> objects.<\/p>runPass\n<p>Builds on method body information from the given <a href=\"#\">BriefUnitGraph<\/a>s.<\/p>\n"
                    }]
                  },
                  "imethodpass": {
                    "ownKey": "imethodpass",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/passes/imethodpass",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/imethodpass"
                      },
                      "description": "",
                      "title": "IMethodPass",
                      "content": "<p>A pass that builds on the CPG based on method head information.<\/p>runPass\n<p>Run the pass on the method head.<\/p>\n"
                    }]
                  },
                  "itypepass": {
                    "ownKey": "itypepass",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/passes/itypepass",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/itypepass"
                      },
                      "description": "",
                      "title": "ITypePass",
                      "content": "<p>A pass that builds CPG type sub-graphs from <a href=\"#\">soot.Type<\/a> objects.<\/p>runPass\n<p>Builds the program type structure.<\/p>\n"
                    }]
                  },
                  "type": {
                    "ownKey": "type",
                    "childrenPages": {"globaltypepass": {
                      "ownKey": "globaltypepass",
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc",
                          "baseUrl": "https://plume-oss.github.io/plume",
                          "fileName": "io/github/plume/oss/passes/type/globaltypepass",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/type/globaltypepass"
                        },
                        "description": "",
                        "title": "GlobalTypePass",
                        "content": "<p>Builds all types which will be considered as global types e.g. int, array types e.g. java.lang.String[].<\/p><init>\n<p>Builds all types which will be considered as global types e.g. int, array types e.g. java.lang.String[].<\/p>\nrunPass\n<p>Creates a global TYPE_DECL and connects it to the global namespace block. i.e<\/p><pre><code>    NAMESPACE_BLOCK(<global>) -(AST)-> TYPE_DECL\n    FILE(<unknown>) -(CONTAINS)-> TYPE_DECL\n    FILE(<unknown>) <-(SOURCE_FILE)- TYPE_DECL\n    TYPE -(REF)-> TYPE_DECL\n    TYPE_DECL -(AST)-> *MEMBER ? String[].length ? (TO-DO:)\n    TYPE_DECL -(AST)-> *MODIFIER ?<\/code><\/pre>\n"
                      }]
                    }},
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/passes/type",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/type"
                      },
                      "description": "",
                      "title": "io.github.plume.oss.passes.type",
                      "content": "<p>GlobalTypePass<\/p>\n<p>Builds all types which will be considered as global types e.g. int, array types e.g. java.lang.String[].<\/p>\n"
                    }]
                  },
                  "graph": {
                    "ownKey": "graph",
                    "childrenPages": {
                      "cfgpass": {
                        "ownKey": "cfgpass",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/passes/graph/cfgpass",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/graph/cfgpass"
                          },
                          "description": "",
                          "title": "CFGPass",
                          "content": "<p>The  IUnitGraphPass  that constructs the dependence edges in the graph.<\/p><init>\n<p>The  IUnitGraphPass  that constructs the dependence edges in the graph.<\/p>\nrunPass\n\n"
                        }]
                      },
                      "astpass": {
                        "ownKey": "astpass",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/passes/graph/astpass",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/graph/astpass"
                          },
                          "description": "",
                          "title": "ASTPass",
                          "content": "<p>The  IUnitGraphPass  that constructs the vertices of the package/file/method hierarchy and connects the AST edges.<\/p><init>\n<p>The  IUnitGraphPass  that constructs the vertices of the package/file/method hierarchy and connects the AST edges.<\/p>\nrunPass\n\n"
                        }]
                      },
                      "pdgpass": {
                        "ownKey": "pdgpass",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/passes/graph/pdgpass",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/graph/pdgpass"
                          },
                          "description": "",
                          "title": "PDGPass",
                          "content": "<p>The  IUnitGraphPass  that constructs the program dependence edges in the graph.<\/p><init>\n<p>The  IUnitGraphPass  that constructs the program dependence edges in the graph.<\/p>\nrunPass\n\n"
                        }]
                      },
                      "cgpass": {
                        "ownKey": "cgpass",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/passes/graph/cgpass",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/graph/cgpass"
                          },
                          "description": "",
                          "title": "CGPass",
                          "content": "<p>The  IUnitGraphPass  that constructs the interprocedural call edges.<\/p><init>\n<p>The  IUnitGraphPass  that constructs the interprocedural call edges.<\/p>\nrunPass\n\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/passes/graph",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/graph"
                      },
                      "description": "",
                      "title": "io.github.plume.oss.passes.graph",
                      "content": "<p>ASTPass<\/p>\n<p>The  IUnitGraphPass  that constructs the vertices of the package/file/method hierarchy and connects the AST edges.<\/p>\nCFGPass\n<p>The  IUnitGraphPass  that constructs the dependence edges in the graph.<\/p>\nCGPass\n<p>The  IUnitGraphPass  that constructs the interprocedural call edges.<\/p>\nPDGPass\n<p>The  IUnitGraphPass  that constructs the program dependence edges in the graph.<\/p>\n"
                    }]
                  },
                  "structure": {
                    "ownKey": "structure",
                    "childrenPages": {
                      "externaltypepass": {
                        "ownKey": "externaltypepass",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/passes/structure/externaltypepass",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/structure/externaltypepass"
                          },
                          "description": "",
                          "title": "ExternalTypePass",
                          "content": "<p>Builds type declaration vertices for external (library or the code is unavailable) types.<\/p><init>\n<p>Builds type declaration vertices for external (library or the code is unavailable) types.<\/p>\nbuildTypeDeclaration\n\nbuildTypeDecNode\n<p>Creates an external TYPE_DECL.<\/p>\n"
                        }]
                      },
                      "fileandpackagepass": {
                        "ownKey": "fileandpackagepass",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/passes/structure/fileandpackagepass",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/structure/fileandpackagepass"
                          },
                          "description": "",
                          "title": "FileAndPackagePass",
                          "content": "<p>Builds all file and package information for classes.<\/p><init>\n<p>Builds all file and package information for classes.<\/p>\nrunPass\n<p>This pass will build and link file and namespace information, i.e.<\/p><pre><code>    NAMESPACE_BLOCK -REF-> NAMESPACE\n    FILE -AST-> NAMESPACE_BLOCK\n    NAMESPACE_BLOCK -SOURCE_FILE-> FILE<\/code><\/pre>\n"
                        }]
                      },
                      "typepass": {
                        "ownKey": "typepass",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/passes/structure/typepass",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/structure/typepass"
                          },
                          "description": "",
                          "title": "TypePass",
                          "content": "<p>Builds type declaration vertices for internal (application) types.<\/p><init>\n<p>Builds type declaration vertices for internal (application) types.<\/p>\nrunPass\n<p>This pass will build type declarations, their modifiers and members and linking them to\ntheir neighbour files. i.e.<\/p><pre><code>    TYPE_DECL -(SOURCE_FILE)-> FILE\n    TYPE_DECL <-(CONTAINS)- FILE\n    TYPE_DECL -(AST)-> *MEMBER\n    TYPE_DECL -(AST)-> *MODIFIER\n    TYPE_DECL -(REF)-> TYPE\n    TYPE_DECL <-(AST)- NAMESPACE_BLOCK<\/code><\/pre>\nbuildTypeDecNode\n\nbuildTypeDeclaration\n\nprojectMember\n\n"
                        }]
                      },
                      "markforrebuildpass": {
                        "ownKey": "markforrebuildpass",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/passes/structure/markforrebuildpass",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/structure/markforrebuildpass"
                          },
                          "description": "",
                          "title": "MarkForRebuildPass",
                          "content": "<p>Checks a list of given classes and any class which is in the database but has changed will be removed. This removal\ninvolves deleting the associated FILE, METHOD, TYPE_DECL and any V where (TYPE_DECL)-AST->(v).<\/p><init>\n<p>Checks a list of given classes and any class which is in the database but has changed will be removed. This removal\ninvolves deleting the associated FILE, METHOD, TYPE_DECL and any V where (TYPE_DECL)-AST->(v).<\/p>\nrunPass\n<p>This pass will check and remove any classes that require an update from the database.<\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/passes/structure",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes/structure"
                      },
                      "description": "",
                      "title": "io.github.plume.oss.passes.structure",
                      "content": "<p>ExternalTypePass<\/p>\n<p>Builds type declaration vertices for external (library or the code is unavailable) types.<\/p>\nFileAndPackagePass\n<p>Builds all file and package information for classes.<\/p>\nMarkForRebuildPass\n<p>Checks a list of given classes and any class which is in the database but has changed will be removed. This removal\ninvolves deleting the associated FILE, METHOD, TYPE_DECL and any V where (TYPE_DECL)-AST->(v).<\/p>\nTypePass\n<p>Builds type declaration vertices for internal (application) types.<\/p>\n"
                    }]
                  }
                },
                "ownPages": [{
                  "reference": {
                    "path": "kotlindoc",
                    "baseUrl": "https://plume-oss.github.io/plume",
                    "fileName": "io/github/plume/oss/passes",
                    "extension": "html",
                    "usePrettyUrl": true,
                    "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/passes"
                  },
                  "description": "",
                  "title": "io.github.plume.oss.passes",
                  "content": "<p>IUnitGraphPass<\/p>\n<p>A pass that builds CPG method bodies from <a href=\"#\">BriefUnitGraph<\/a> objects.<\/p>\nIMethodPass\n<p>A pass that builds on the CPG based on method head information.<\/p>\nIProgramStructurePass\n<p>A pass that builds CPG program structure from <a href=\"#\">SootClass<\/a> objects.<\/p>\nITypePass\n<p>A pass that builds CPG type sub-graphs from <a href=\"#\">soot.Type<\/a> objects.<\/p>\nSCPGPass\n<p>Runs passes from <a href=\"#\">io.shiftleft.dataflowengineoss.passes<\/a> over method bodies.<\/p>\nio.github.plume.oss.passes.graph\n<p>io.github.plume.oss.passes.method<\/p>\n<p>io.github.plume.oss.passes.structure<\/p>\n<p>io.github.plume.oss.passes.type<\/p>\n"
                }]
              },
              "util": {
                "ownKey": "util",
                "childrenPages": {
                  "sootparserutil": {
                    "ownKey": "sootparserutil",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/util/sootparserutil",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/util/sootparserutil"
                      },
                      "description": "",
                      "title": "SootParserUtil",
                      "content": "<p>determineModifiers<\/p>\n<p>Given the ASM5 access parameter and method name, determines the modifier types.<\/p><p>In Java, all non-static methods are by default \"virtual functions.\" Only methods marked with the keyword final,\nwhich cannot be overridden, along with private methods, which are not inherited, are non-virtual.<\/p>\ndetermineEvaluationStrategy\n<p>Given a parameter signature and context of the parameter, determines the evaluation strategy used.\nTODO: Confirm if these assumptions are true<\/p>\nparseAndFlipEquality\n<p>Parses the jump statement equality and returns the opposite.<\/p>\nisArrayType\n"
                    }]
                  },
                  "codecontrol": {
                    "ownKey": "codecontrol",
                    "childrenPages": {
                      "stopexitsecuritymanager": {
                        "ownKey": "stopexitsecuritymanager",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/util/codecontrol/stopexitsecuritymanager",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/util/codecontrol/stopexitsecuritymanager"
                          },
                          "description": "",
                          "title": "StopExitSecurityManager",
                          "content": "<p><init><\/p>\n<p>checkPermission<\/p>\n<p>getPreviousMgr<\/p>\n"
                        }]
                      },
                      "stopexitexception": {
                        "ownKey": "stopexitexception",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/util/codecontrol/stopexitexception",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/util/codecontrol/stopexitexception"
                          },
                          "description": "",
                          "title": "StopExitException",
                          "content": "<p><init><\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/util/codecontrol",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/util/codecontrol"
                      },
                      "description": "",
                      "title": "CodeControl",
                      "content": "<p>Used to stop the JVM from passing System.exit commands.<\/p><init>\n<p>Used to stop the JVM from passing System.exit commands.<\/p>\ndisableSystemExit\n\nenableSystemExit\n\n"
                    }]
                  },
                  "diffgraphutil": {
                    "ownKey": "diffgraphutil",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/util/diffgraphutil",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/util/diffgraphutil"
                      },
                      "description": "",
                      "title": "DiffGraphUtil",
                      "content": "<p>Utility class to process <a href=\"#\">DiffGraph<\/a> changes.<\/p>processDiffGraph\n<p>Processes <a href=\"#\">DiffGraph<\/a> operations and applies them to the given  IDriver .<\/p>\nconvertNode\n"
                    }]
                  },
                  "plumekeyprovider": {
                    "ownKey": "plumekeyprovider",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/util/plumekeyprovider",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/util/plumekeyprovider"
                      },
                      "description": "",
                      "title": "PlumeKeyProvider",
                      "content": "<p>keyPoolSize<\/p>\n<p>The size of IDs to acquire per thread. Once this is finished, the thread will acquire another pool of IDs of this\nsize. This value can never be set to < 0 and if the value overflows it will default to 1000.<\/p>\ngetNewId\n<p>Returns a new ID for the current thread to assign a vertex to.<\/p>\nclearKeyPools\n<p>In the case key pools need to be regenerated they can be cleared here.<\/p>\n"
                    }]
                  },
                  "soottoplumeutil": {
                    "ownKey": "soottoplumeutil",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/util/soottoplumeutil",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/util/soottoplumeutil"
                      },
                      "description": "",
                      "title": "SootToPlumeUtil",
                      "content": "<p>A utility class of methods to convert Soot objects to <a href=\"#\">NewNodeBuilder<\/a> items and construct pieces of the CPG.<\/p>projectMethodParameterIn\n<p>Given an <a href=\"#\">soot.Local<\/a>, will construct method parameter information in the graph.<\/p>\nprojectLocalVariable\n<p>Given an <a href=\"#\">soot.Local<\/a>, will construct local variable information in the graph.<\/p>\nmethodToStrings\n<p>createNewExpr<\/p>\n<p>New expressions are specific to OOP languages and are thus Unknown nodes.<\/p>\nsootClassToFileName\n<p>Derive a file name from an object of type <code>SootClass<\/code><\/p>\ncreateLiteralVertex\n<p>Creates a <a href=\"#\">NewLiteral<\/a> from a <a href=\"#\">Constant<\/a>.<\/p>\ncreateIdentifierVertex\n<p>Creates a <a href=\"#\">NewIdentifier<\/a> from a <a href=\"#\">Value<\/a>.<\/p>\ncreateArrayRefIdentifier\n<p>Creates a <a href=\"#\">NewIdentifier<\/a> from an <a href=\"#\">ArrayRef<\/a>.<\/p>\ncreateFieldIdentifierVertex\n<p>Creates a <a href=\"#\">NewFieldIdentifier<\/a> from a <a href=\"#\">FieldRef<\/a>.<\/p>\ncreateScalaList\n<p>parseBinopExpr<\/p>\n<p>parseBinopExpr<\/p>\n"
                    }]
                  },
                  "resourcecompilationutil": {
                    "ownKey": "resourcecompilationutil",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/util/resourcecompilationutil",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/util/resourcecompilationutil"
                      },
                      "description": "",
                      "title": "ResourceCompilationUtil",
                      "content": "<p>TEMP_DIR<\/p>\n<p>COMP_DIR<\/p>\n<p>compileJavaFiles<\/p>\n<p>Given paths to a Java source files, programmatically compiles the source (.java) files.<\/p>\nmoveClassFiles\n<p>Inspects class files and moves them to the temp directory based on their package path.<\/p>\nunzipArchive\n<p>compileLoadedFiles<\/p>\n<p>Will compile all supported source files loaded in the given set.<\/p>\n"
                    }]
                  },
                  "extractorconst": {
                    "ownKey": "extractorconst",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/util/extractorconst",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/util/extractorconst"
                      },
                      "description": "",
                      "title": "ExtractorConst",
                      "content": "<p>LANGUAGE_FRONTEND<\/p>\n<p>plumeVersion<\/p>\n<p>PRIMITIVES<\/p>\n<p>ENTRYPOINT<\/p>\n<p>TRUE_TARGET<\/p>\n<p>FALSE_TARGET<\/p>\n<p>UNKNOWN<\/p>\n<p>GLOBAL<\/p>\n<p>BOOLEAN_TYPES<\/p>\n<p>INT_TYPES<\/p>\n<p>TYPE_REFERENCED_NODES<\/p>\n<p>TYPE_REFERENCED_EDGES<\/p>\n"
                    }]
                  }
                },
                "ownPages": [{
                  "reference": {
                    "path": "kotlindoc",
                    "baseUrl": "https://plume-oss.github.io/plume",
                    "fileName": "io/github/plume/oss/util",
                    "extension": "html",
                    "usePrettyUrl": true,
                    "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/util"
                  },
                  "description": "",
                  "title": "io.github.plume.oss.util",
                  "content": "<p>CodeControl<\/p>\n<p>Used to stop the JVM from passing System.exit commands.<\/p>\nDiffGraphUtil\n<p>Utility class to process <a href=\"#\">DiffGraph<\/a> changes.<\/p>\nExtractorConst\n<p>PlumeKeyProvider<\/p>\n<p>ResourceCompilationUtil<\/p>\n<p>SootParserUtil<\/p>\n<p>SootToPlumeUtil<\/p>\n<p>A utility class of methods to convert Soot objects to <a href=\"#\">NewNodeBuilder<\/a> items and construct pieces of the CPG.<\/p>\n"
                }]
              },
              "domain": {
                "ownKey": "domain",
                "childrenPages": {
                  "files": {
                    "ownKey": "files",
                    "childrenPages": {
                      "filefactory": {
                        "ownKey": "filefactory",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/domain/files/filefactory",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/domain/files/filefactory"
                          },
                          "description": "",
                          "title": "FileFactory",
                          "content": "<p>The factory responsible for obtaining the desired <a href=\"https://docs.oracle.com/javase/6/docs/api/java/io/File.html\">File<\/a> wrapped by its programming language wrapper determined by\nthe file extension.<\/p>invoke\n<p>Creates a <a href=\"https://docs.oracle.com/javase/6/docs/api/java/io/File.html\">File<\/a> given the pathname.<\/p>\ninvoke\n<p>Creates a <a href=\"https://docs.oracle.com/javase/6/docs/api/java/io/File.html\">File<\/a> given the pathname.<\/p>\ngetFileHash\n<p>Will ingest a file's contents and return the xxHash32 representation. See\n<a href=\"https://cyan4973.github.io/xxHash/\">xxHash<\/a> for more information.<\/p>\n"
                        }]
                      },
                      "jvmclassfile": {
                        "ownKey": "jvmclassfile",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/domain/files/jvmclassfile",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/domain/files/jvmclassfile"
                          },
                          "description": "",
                          "title": "JVMClassFile",
                          "content": "<p>Class wrapper for JVM class files.<\/p><init>\n<p>Class wrapper for JVM class files.<\/p>\n"
                        }]
                      },
                      "supportedfile": {
                        "ownKey": "supportedfile",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/domain/files/supportedfile",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/domain/files/supportedfile"
                          },
                          "description": "",
                          "title": "SupportedFile",
                          "content": "<p>The file types supported by Plume's  Extractor .<\/p>JAVA\n<p>Java is a class-based, object-oriented programming language that is designed to have as few implementation\ndependencies as possible.<\/p>\nJVM_CLASS\n<p>Java bytecode is the instruction set of the Java virtual machine.<\/p>\n"
                        }]
                      },
                      "javafile": {
                        "ownKey": "javafile",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/domain/files/javafile",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/domain/files/javafile"
                          },
                          "description": "",
                          "title": "JavaFile",
                          "content": "<p>Class wrapper for Java source files.<\/p><init>\n<p>Class wrapper for Java source files.<\/p>\n"
                        }]
                      },
                      "plumefile": {
                        "ownKey": "plumefile",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/domain/files/plumefile",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/domain/files/plumefile"
                          },
                          "description": "",
                          "title": "PlumeFile",
                          "content": "<p>Generic wrapper for supported Plume source/class files.<\/p><init>\n<p>Generic wrapper for supported Plume source/class files.<\/p>\nhashCode\n\nequals\n\n"
                        }]
                      },
                      "unsupportedfile": {
                        "ownKey": "unsupportedfile",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/domain/files/unsupportedfile",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/domain/files/unsupportedfile"
                          },
                          "description": "",
                          "title": "UnsupportedFile",
                          "content": "<p>Class wrapper for unsupported files.<\/p><init>\n<p>Class wrapper for unsupported files.<\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/domain/files",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/domain/files"
                      },
                      "description": "",
                      "title": "io.github.plume.oss.domain.files",
                      "content": "<p>FileFactory<\/p>\n<p>The factory responsible for obtaining the desired <a href=\"https://docs.oracle.com/javase/6/docs/api/java/io/File.html\">File<\/a> wrapped by its programming language wrapper determined by\nthe file extension.<\/p>\nJavaFile\n<p>Class wrapper for Java source files.<\/p>\nJVMClassFile\n<p>Class wrapper for JVM class files.<\/p>\nUnsupportedFile\n<p>Class wrapper for unsupported files.<\/p>\nSupportedFile\n<p>The file types supported by Plume's  Extractor .<\/p>\nPlumeFile\n<p>Generic wrapper for supported Plume source/class files.<\/p>\n"
                    }]
                  },
                  "mappers": {
                    "ownKey": "mappers",
                    "childrenPages": {"vertexmapper": {
                      "ownKey": "vertexmapper",
                      "ownPages": [{
                        "reference": {
                          "path": "kotlindoc",
                          "baseUrl": "https://plume-oss.github.io/plume",
                          "fileName": "io/github/plume/oss/domain/mappers/vertexmapper",
                          "extension": "html",
                          "usePrettyUrl": true,
                          "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/domain/mappers/vertexmapper"
                        },
                        "description": "",
                        "title": "VertexMapper",
                        "content": "<p>Responsible for marshalling and unmarshalling vertex properties to and from <a href=\"#\">NewNode<\/a> objects to Map objects.<\/p>mapToVertex\n<p>Converts a <a href=\"#\">Node<\/a> to its respective <a href=\"#\">NewNodeBuilder<\/a> object.<\/p>\nmapToVertex\n<p>Converts a <a href=\"#\">NewNode<\/a> to its respective <a href=\"#\">NewNodeBuilder<\/a> object.<\/p>\nmapToVertex\n<p>Converts a Map containing vertex properties to its respective <a href=\"#\">NewNodeBuilder<\/a> object.<\/p>\ncheckSchemaConstraints\n<p>Checks if the given edge complies with the CPG schema given the from and two vertices.<\/p>\ncheckSchemaConstraints\n<p>Checks if the given edge complies with the CPG schema given the from and two vertices.<\/p>\nextractAttributesFromMap\n"
                      }]
                    }},
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/domain/mappers",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/domain/mappers"
                      },
                      "description": "",
                      "title": "io.github.plume.oss.domain.mappers",
                      "content": "<p>VertexMapper<\/p>\n<p>Responsible for marshalling and unmarshalling vertex properties to and from <a href=\"#\">NewNode<\/a> objects to Map objects.<\/p>\n"
                    }]
                  },
                  "exceptions": {
                    "ownKey": "exceptions",
                    "childrenPages": {
                      "plumetransactionexception": {
                        "ownKey": "plumetransactionexception",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/domain/exceptions/plumetransactionexception",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/domain/exceptions/plumetransactionexception"
                          },
                          "description": "",
                          "title": "PlumeTransactionException",
                          "content": "<p>Thrown to indicate a transaction related failure when attempting to create or commit a graph database transaction.<\/p><init>\n<p>Thrown to indicate a transaction related failure when attempting to create or commit a graph database transaction.<\/p>\n"
                        }]
                      },
                      "plumecompileexception": {
                        "ownKey": "plumecompileexception",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/domain/exceptions/plumecompileexception",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/domain/exceptions/plumecompileexception"
                          },
                          "description": "",
                          "title": "PlumeCompileException",
                          "content": "<p>Thrown to indicate that Plume was unable to find a suitable compiler to compile the given source code.<\/p><init>\n<p>Thrown to indicate that Plume was unable to find a suitable compiler to compile the given source code.<\/p>\n"
                        }]
                      },
                      "plumeschemaviolationexception": {
                        "ownKey": "plumeschemaviolationexception",
                        "ownPages": [{
                          "reference": {
                            "path": "kotlindoc",
                            "baseUrl": "https://plume-oss.github.io/plume",
                            "fileName": "io/github/plume/oss/domain/exceptions/plumeschemaviolationexception",
                            "extension": "html",
                            "usePrettyUrl": true,
                            "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/domain/exceptions/plumeschemaviolationexception"
                          },
                          "description": "",
                          "title": "PlumeSchemaViolationException",
                          "content": "<p>Thrown when an invalid edge connection is attempted to be created between two <a href=\"#\">NewNodeBuilder<\/a>s.<\/p><init>\n<p>Thrown when an invalid edge connection is attempted to be created between two <a href=\"#\">NewNodeBuilder<\/a>s.<\/p>\n"
                        }]
                      }
                    },
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/domain/exceptions",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/domain/exceptions"
                      },
                      "description": "",
                      "title": "io.github.plume.oss.domain.exceptions",
                      "content": "<p>PlumeCompileException<\/p>\n<p>Thrown to indicate that Plume was unable to find a suitable compiler to compile the given source code.<\/p>\nPlumeSchemaViolationException\n<p>Thrown when an invalid edge connection is attempted to be created between two <a href=\"#\">NewNodeBuilder<\/a>s.<\/p>\nPlumeTransactionException\n<p>Thrown to indicate a transaction related failure when attempting to create or commit a graph database transaction.<\/p>\n"
                    }]
                  }
                }
              },
              "options": {
                "ownKey": "options",
                "childrenPages": {"extractoroptions": {
                  "ownKey": "extractoroptions",
                  "childrenPages": {"callgraphalg": {
                    "ownKey": "callgraphalg",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/options/extractoroptions/callgraphalg",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/options/extractoroptions/callgraphalg"
                      },
                      "description": "",
                      "title": "CallGraphAlg",
                      "content": "<p>The call graph algorithms Plume supports.<\/p>NONE\n<p>CHA<\/p>\n<p>SPARK<\/p>\n"
                    }]
                  }},
                  "ownPages": [{
                    "reference": {
                      "path": "kotlindoc",
                      "baseUrl": "https://plume-oss.github.io/plume",
                      "fileName": "io/github/plume/oss/options/extractoroptions",
                      "extension": "html",
                      "usePrettyUrl": true,
                      "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/options/extractoroptions"
                    },
                    "description": "",
                    "title": "ExtractorOptions",
                    "content": "<p>Provides options for configuring how Plume extracts the CPG from bytecode.<\/p>callGraphAlg\n<p>The call graph algorithm to specify for Soot to make use of during points-to-analysis. Choosing\n CallGraphAlg.NONE  will result in a intraprocedural CPG only.<\/p>\nsparkOpts\n<p>A map to specify configuration options for Soot's SPARK call graph algorithm. An exhaustive list of these options\ncan be found <a href=\"https://soot-build.cs.uni-paderborn.de/public/origin/develop/soot/soot-develop/options/soot_options.htm#phase_5_2\">here<\/a>.<\/p>\n"
                  }]
                }},
                "ownPages": [{
                  "reference": {
                    "path": "kotlindoc",
                    "baseUrl": "https://plume-oss.github.io/plume",
                    "fileName": "io/github/plume/oss/options",
                    "extension": "html",
                    "usePrettyUrl": true,
                    "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/options"
                  },
                  "description": "",
                  "title": "io.github.plume.oss.options",
                  "content": "<p>ExtractorOptions<\/p>\n<p>Provides options for configuring how Plume extracts the CPG from bytecode.<\/p>\n"
                }]
              },
              "globalcache": {
                "ownKey": "globalcache",
                "ownPages": [{
                  "reference": {
                    "path": "kotlindoc",
                    "baseUrl": "https://plume-oss.github.io/plume",
                    "fileName": "io/github/plume/oss/globalcache",
                    "extension": "html",
                    "usePrettyUrl": true,
                    "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/globalcache"
                  },
                  "description": "",
                  "title": "GlobalCache",
                  "content": "<p>A cache to reduce read calls to the database.<\/p>addSootAssoc\n<p>Associates the given Soot object to the given <a href=\"#\">NewNode<\/a>.<\/p>\naddSootAssoc\n<p>Associates the given Soot object to the given list of <a href=\"#\">NewNode<\/a>s.<\/p>\ngetSootAssoc\n<p>Retrieves the list of <a href=\"#\">NewNode<\/a> associations to the given Soot object.<\/p>\nputFileHash\n<p>Associates the given <a href=\"#\">SootClass<\/a> with its source file's hash.<\/p>\ngetFileHash\n<p>Retrieves the original file's hash from the given <a href=\"#\">SootClass<\/a>.<\/p>\nsaveCallEdge\n<p>Saves call graph edges to the <a href=\"#\">NewMethod<\/a> from the <a href=\"#\">NewCallBuilder<\/a>.<\/p>\ngetCallEdgeIn\n<p>Retrieves all the incoming <a href=\"#\">NewCall<\/a>s from the given <a href=\"#\">NewMethod<\/a>.<\/p>\nclear\n"
                }]
              },
              "extractor": {
                "ownKey": "extractor",
                "ownPages": [{
                  "reference": {
                    "path": "kotlindoc",
                    "baseUrl": "https://plume-oss.github.io/plume",
                    "fileName": "io/github/plume/oss/extractor",
                    "extension": "html",
                    "usePrettyUrl": true,
                    "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/extractor"
                  },
                  "description": "",
                  "title": "Extractor",
                  "content": "<p>The main entrypoint of the extractor from which the CPG will be created.<\/p>driver\n<p>the  IDriver  with which the graph will be constructed with.<\/p>\n<init>\n<p>The main entrypoint of the extractor from which the CPG will be created.<\/p>\nload\n<p>Loads a single Java class file or directory of class files into the cannon.<\/p>\nproject\n<p>Projects all loaded classes to the graph database.<\/p>\n"
                }]
              },
              "metrics": {
                "ownKey": "metrics",
                "childrenPages": {
                  "extractortimekey": {
                    "ownKey": "extractortimekey",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/metrics/extractortimekey",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/metrics/extractortimekey"
                      },
                      "description": "",
                      "title": "ExtractorTimeKey",
                      "content": "<p>COMPILING_AND_UNPACKING<\/p>\n<p>This is how long it takes to compile .java files or unpack JAR files, and move all .class files to the temporary\nbuild directory. This is wall clock time.<\/p>\nSOOT\n<p>Wall clock time taken by Soot to parse classes, build unit graphs, call graphs, and class hierarchy.<\/p>\nBASE_CPG_BUILDING\n<p>Wall clock time taken to build AST, CFG, PDG, and call graph onto the database.<\/p>\nDATABASE_WRITE\n<p>CPU time spent on database writes.<\/p>\nDATABASE_READ\n<p>CPU time spent on database reads.<\/p>\nSCPG_PASSES\n<p>Wall clock time spent running semantic code property graph passes from <a href=\"#\">io.shiftleft.semanticcpg.passes<\/a> and\n<a href=\"#\">io.shiftleft.dataflowengineoss.passes<\/a>.<\/p>\n"
                    }]
                  },
                  "plumetimer": {
                    "ownKey": "plumetimer",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/metrics/plumetimer",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/metrics/plumetimer"
                      },
                      "description": "",
                      "title": "PlumeTimer",
                      "content": "<p>Timer to track time elapsed for Plume operations.<\/p>startTimerOn\n<p>Starts a timer for the given operation as per  ExtractorTimeKey .<\/p>\nstopTimerOn\n<p>Stops a timer for the given operation as per  ExtractorTimeKey .<\/p>\nmeasure\n<p>Measures the time the given function takes to complete. This wraps the function with  startTimerOn  and\n stopTimerOn  with all the given  ExtractorTimeKey s.<\/p>\nstopAll\n<p>Stops all timers.<\/p>\nreset\n<p>Resets all timers.<\/p>\ngetTimes\n<p>Gets all the recorded times.<\/p>\n"
                    }]
                  }
                },
                "ownPages": [{
                  "reference": {
                    "path": "kotlindoc",
                    "baseUrl": "https://plume-oss.github.io/plume",
                    "fileName": "io/github/plume/oss/metrics",
                    "extension": "html",
                    "usePrettyUrl": true,
                    "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/metrics"
                  },
                  "description": "",
                  "title": "io.github.plume.oss.metrics",
                  "content": "<p>PlumeTimer<\/p>\n<p>Timer to track time elapsed for Plume operations.<\/p>\nExtractorTimeKey\n"
                }]
              },
              "drivers": {
                "ownKey": "drivers",
                "childrenPages": {
                  "driverfactory": {
                    "ownKey": "driverfactory",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/drivers/driverfactory",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers/driverfactory"
                      },
                      "description": "",
                      "title": "DriverFactory",
                      "content": "<p>The factory responsible for obtaining the desired  IDriver .<\/p>invoke\n<p>Creates an  IDriver  based on the given  GraphDatabase .<\/p>\n"
                    }]
                  },
                  "gremlinoverriddeniddriver": {
                    "ownKey": "gremlinoverriddeniddriver",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/drivers/gremlinoverriddeniddriver",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers/gremlinoverriddeniddriver"
                      },
                      "description": "",
                      "title": "GremlinOverriddenIdDriver",
                      "content": "<p><init><\/p>\n<p>getVertexIds<\/p>\n<p>Given a lower bound and an upper bound, return all vertex IDs which fall between these ranges in the database.<\/p>\nprepareVertexProperties\n"
                    }]
                  },
                  "ischemasafedriver": {
                    "ownKey": "ischemasafedriver",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/drivers/ischemasafedriver",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers/ischemasafedriver"
                      },
                      "description": "",
                      "title": "ISchemaSafeDriver",
                      "content": "<p>Interface for drivers on top of databases that allow for schemas to be set.<\/p>buildSchema\n<p>Builds and installs the CPG schema in the target database. The schema executed is from\n ISchemaSafeDriver.buildSchemaPayload .<\/p>\nbuildSchemaPayload\n<p>Builds the schema from generated CPG code and returns it as a String to be executed on the database.<\/p>\n"
                    }]
                  },
                  "neptunedriver": {
                    "ownKey": "neptunedriver",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/drivers/neptunedriver",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers/neptunedriver"
                      },
                      "description": "",
                      "title": "NeptuneDriver",
                      "content": "<p>The driver used to connect to a remote Amazon Neptune instance.<\/p>addHostnames\n<p>Add one or more the addresses of a Gremlin Servers to the list of servers a Client will try to contact to send\nrequests to. The address should be parseable by InetAddress.getByName(String). That's the only validation\nperformed at this point. No connection to the host is attempted.<\/p>\nport\n<p>Set the port for the Neptune Gremlin server. Default port number is 8182.<\/p>\nkeyCertChainFile\n<p>Sets the certificate to use by the <a href=\"#\">Cluster<\/a>.<\/p>\nconnect\n<p>Connects to the graph database with the given configuration.\nSee <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-gremlin-java.html\">Amazon Documentation<\/a>.<\/p>\nclose\n<p>Attempts to close the graph database connection and resources.<\/p>\ncreateVertex\n<p>Given a <a href=\"#\">NewNodeBuilder<\/a>, creates a <a href=\"#\">Vertex<\/a> and translates the object's field properties to key-value\npairs on the <a href=\"#\">Vertex<\/a> object. This is then added to this driver's <a href=\"#\">Graph<\/a>.<\/p>\n"
                    }]
                  },
                  "neo4jdriver": {
                    "ownKey": "neo4jdriver",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/drivers/neo4jdriver",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers/neo4jdriver"
                      },
                      "description": "",
                      "title": "Neo4jDriver",
                      "content": "<p>The driver used to connect to a remote Neo4j instance.<\/p>connected\n<p>Indicates whether the driver is connected to the graph database or not.<\/p>\ndatabase\n<p>The Neo4j server database name.<\/p>\nusername\n<p>The Neo4j server username.<\/p>\npassword\n<p>The Neo4j server password.<\/p>\nhostname\n<p>The Neo4j server hostname.<\/p>\nport\n<p>The Neo4j server port.<\/p>\ndatabase\n<p>Set the database name for the Neo4j server.<\/p>\nusername\n<p>Set the username for the Neo4j server.<\/p>\npassword\n<p>Set the password for the Neo4j server.<\/p>\nhostname\n<p>Set the hostname for the Neo4j server.<\/p>\nport\n<p>Set the port for the Neo4j server.<\/p>\nconnect\n<p>close<\/p>\n<p>addVertex<\/p>\n<p>Inserts a vertex in the graph database.<\/p>\nexists\n<p>Checks if the given <a href=\"#\">NewNodeBuilder<\/a> exists in the database.<\/p>\nexists\n<p>Checks if there exists a directed edge of the given label between two <a href=\"#\">NewNodeBuilder<\/a> vertices.<\/p>\naddEdge\n<p>Creates an edge with the given label between two <a href=\"#\">NewNodeBuilder<\/a> vertices in the graph database.\nIf the given vertices are not already present in the database, they are created. If the edge already exists\nit wil not be recreated.<\/p>\nclearGraph\n<p>Clears the graph of all vertices and edges.<\/p>\ngetWholeGraph\n<p>Returns the whole CPG as a <a href=\"#\">Graph<\/a> object. Depending on the size of the CPG, this may be very memory\nintensive and usually a bad idea to call.<\/p>\ngetMethod\n<p>Given the full signature of a method, returns the subgraph of the method body.<\/p>\ngetMethodNames\n<p>Obtains all method full names in the CPG. These can be used in  IDriver.getMethod .<\/p>\ngetProgramStructure\n<p>Obtains all program structure related vertices. These are NAMESPACE_BLOCK, FILE, and TYPE_DECL vertices.<\/p>\ngetProgramTypeData\n<p>Obtains all the type references, declarations, and arguments of a program to their children and referenced\nvertices.<\/p>\ngetNeighbours\n<p>Given a vertex, returns a <a href=\"#\">Graph<\/a> representation of neighbouring vertices.<\/p>\ndeleteVertex\n<p>Given a vertex, will remove it from the graph if present.<\/p>\ndeleteEdge\n<p>Given two vertices and an edge label.<\/p>\ndeleteMethod\n<p>Given the full signature of a method, removes the method and its body from the graph.<\/p>\nupdateVertexProperty\n<p>Updates a vertex's property if the node exists.<\/p>\ngetMetaData\n<p>Obtains the graph meta data information, if found.<\/p>\ngetVerticesByProperty\n<p>Attempts to get vertex by it's fullname property.<\/p>\ngetPropertyFromVertices\n<p>Get a list of the results from a given property in vertices.<\/p>\n"
                    }]
                  },
                  "gremlindriver": {
                    "ownKey": "gremlindriver",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/drivers/gremlindriver",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers/gremlindriver"
                      },
                      "description": "",
                      "title": "GremlinDriver",
                      "content": "<p>The driver used by remote Gremlin connections.<\/p>graph\n<p>g<\/p>\n<p>config<\/p>\n<p>The key-value configuration object used in creating the connection to the Gremlin server.<\/p>\nconnected\n<p>Indicates whether the driver is connected to the graph database or not.<\/p>\n<init>\n<p>The driver used by remote Gremlin connections.<\/p>\nconnect\n<p>Connects to the graph database with the given configuration.<\/p>\nclose\n<p>Attempts to close the graph database connection and resources.<\/p>\naddVertex\n<p>Inserts a vertex in the graph database.<\/p>\nexists\n<p>Checks if the given <a href=\"#\">NewNodeBuilder<\/a> exists in the database.<\/p>\nexists\n<p>Checks if there exists a directed edge of the given label between two <a href=\"#\">NewNodeBuilder<\/a> vertices.<\/p>\nfindVertexTraversal\n\naddEdge\n<p>Creates an edge with the given label between two <a href=\"#\">NewNodeBuilder<\/a> vertices in the graph database.\nIf the given vertices are not already present in the database, they are created. If the edge already exists\nit wil not be recreated.<\/p>\nclearGraph\n<p>Clears the graph of all vertices and edges.<\/p>\ncreateVertex\n<p>Given a <a href=\"#\">NewNode<\/a>, creates a <a href=\"#\">Vertex<\/a> and translates the object's field properties to key-value\npairs on the <a href=\"#\">Vertex<\/a> object. This is then added to this driver's <a href=\"#\">Graph<\/a>.<\/p>\nprepareVertexProperties\n\ngetWholeGraph\n<p>Returns the whole CPG as a <a href=\"#\">Graph<\/a> object. Depending on the size of the CPG, this may be very memory\nintensive and usually a bad idea to call.<\/p>\ngetMethod\n<p>Given the full signature of a method, returns the subgraph of the method body.<\/p>\ngetMethodNames\n<p>Obtains all method full names in the CPG. These can be used in  IDriver.getMethod .<\/p>\ngetProgramStructure\n<p>Obtains all program structure related vertices. These are NAMESPACE_BLOCK, FILE, and TYPE_DECL vertices.<\/p>\ngetProgramTypeData\n<p>Obtains all the type references, declarations, and arguments of a program to their children and referenced\nvertices.<\/p>\ngetNeighbours\n<p>Given a vertex, returns a <a href=\"#\">Graph<\/a> representation of neighbouring vertices.<\/p>\ndeleteVertex\n<p>Given a vertex, will remove it from the graph if present.<\/p>\ndeleteEdge\n<p>Given two vertices and an edge label.<\/p>\ndeleteMethod\n<p>Given the full signature of a method, removes the method and its body from the graph.<\/p>\nupdateVertexProperty\n<p>Updates a vertex's property if the node exists.<\/p>\ngetMetaData\n<p>Obtains the graph meta data information, if found.<\/p>\ngetVerticesByProperty\n<p>Attempts to get vertex by it's fullname property.<\/p>\ngetPropertyFromVertices\n<p>Get a list of the results from a given property in vertices.<\/p>\nmapVertexKeys\n\n"
                    }]
                  },
                  "janusgraphdriver": {
                    "ownKey": "janusgraphdriver",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/drivers/janusgraphdriver",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers/janusgraphdriver"
                      },
                      "description": "",
                      "title": "JanusGraphDriver",
                      "content": "<p>The driver used to connect to a remote JanusGraph instance.<\/p>connect\n<p>Connects to the graph database with the given configuration. Set  REMOTE_CONFIG  to the path of the\nremote-graph.properties configuration file. See <a href=\"https://docs.janusgraph.org/connecting/java/\">JanusGraph Documentation<\/a>.<\/p>\nclose\n<p>Attempts to close the graph database connection and resources.<\/p>\nremoteConfig\n<p>Sets the path of the remote-graph.properties configuration file.\nSee <a href=\"https://docs.janusgraph.org/connecting/java/\">JanusGraph Documentation<\/a>.<\/p>\nupdateVertexProperty\n<p>Updates a vertex's property if the node exists.<\/p>\nprepareVertexProperties\n<p>mapVertexKeys<\/p>\n<p>buildSchema<\/p>\n<p>Builds and installs the CPG schema in the target database. The schema executed is from\n ISchemaSafeDriver.buildSchemaPayload .<\/p>\nbuildSchemaPayload\n<p>Builds the schema from generated CPG code and returns it as a String to be executed on the database.<\/p>\nJanusGraphDriver\n<p>The driver used to connect to a remote JanusGraph instance.<\/p>\n"
                    }]
                  },
                  "overflowdbdriver": {
                    "ownKey": "overflowdbdriver",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/drivers/overflowdbdriver",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers/overflowdbdriver"
                      },
                      "description": "",
                      "title": "OverflowDbDriver",
                      "content": "<p>Driver to create an OverflowDB database file from Plume's domain classes.<\/p>storageLocation\n<p>Where the database will be serialize/deserialize and overflow to disk.<\/p>\noverflow\n<p>Specifies if OverflowDb should write to disk when memory is constrained.<\/p>\nheapPercentageThreshold\n<p>Percentage of the heap from when overflowing should begin to occur. Default is 80%.<\/p>\nserializationStatsEnabled\n<p>If specified, OverflowDB will measure and report serialization/deserialization timing averages.<\/p>\nstorageLocation\n<p>Set the storage location.<\/p>\noverflow\n<p>Set whether the database overflows or not.<\/p>\nheapPercentageThreshold\n<p>Set the percentage threshold before overflowing.<\/p>\nserializationStatsEnabled\n<p>To set if serialization/deserialization timing averages should be reported.<\/p>\nconnect\n<p>addVertex<\/p>\n<p>Inserts a vertex in the graph database.<\/p>\nexists\n<p>Checks if the given <a href=\"#\">NewNodeBuilder<\/a> exists in the database.<\/p>\nexists\n<p>Checks if there exists a directed edge of the given label between two <a href=\"#\">NewNodeBuilder<\/a> vertices.<\/p>\naddEdge\n<p>Creates an edge with the given label between two <a href=\"#\">NewNodeBuilder<\/a> vertices in the graph database.\nIf the given vertices are not already present in the database, they are created. If the edge already exists\nit wil not be recreated.<\/p>\nclearGraph\n<p>Clears the graph of all vertices and edges.<\/p>\ngetWholeGraph\n<p>Returns the whole CPG as a <a href=\"#\">Graph<\/a> object. Depending on the size of the CPG, this may be very memory\nintensive and usually a bad idea to call.<\/p>\ngetMethod\n<p>Given the full signature of a method, returns the subgraph of the method body.<\/p>\ngetMethodNames\n<p>Obtains all method full names in the CPG. These can be used in  IDriver.getMethod .<\/p>\ngetProgramStructure\n<p>Obtains all program structure related vertices. These are NAMESPACE_BLOCK, FILE, and TYPE_DECL vertices.<\/p>\ngetProgramTypeData\n<p>Obtains all the type references, declarations, and arguments of a program to their children and referenced\nvertices.<\/p>\ngetNeighbours\n<p>Given a vertex, returns a <a href=\"#\">Graph<\/a> representation of neighbouring vertices.<\/p>\ndeleteVertex\n<p>Given a vertex, will remove it from the graph if present.<\/p>\ndeleteEdge\n<p>Given two vertices and an edge label.<\/p>\ndeleteMethod\n<p>Given the full signature of a method, removes the method and its body from the graph.<\/p>\nupdateVertexProperty\n<p>Updates a vertex's property if the node exists.<\/p>\ngetMetaData\n<p>Obtains the graph meta data information, if found.<\/p>\ngetVerticesByProperty\n<p>Attempts to get vertex by it's fullname property.<\/p>\ngetPropertyFromVertices\n<p>Get a list of the results from a given property in vertices.<\/p>\nclose\n"
                    }]
                  },
                  "tinkergraphdriver": {
                    "ownKey": "tinkergraphdriver",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/drivers/tinkergraphdriver",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers/tinkergraphdriver"
                      },
                      "description": "",
                      "title": "TinkerGraphDriver",
                      "content": "<p>The driver used to connect to an in-memory TinkerGraph instance.<\/p>connect\n<p>Connects to the graph database with the given configuration.<\/p>\naddConfig\n<p>Add or update a <a href=\"#\">BaseConfiguration<\/a> key-value pair.<\/p>\nexportGraph\n<p>Export the currently connected graph to the given path. The extension of the file should be included and may only\nbe .xml, .json, or .kryo. If a graph file already exists it will be overwritten.<\/p>\nimportGraph\n<p>Imports a .xml, .json, or .kryo TinkerGraph file into the currently connected graph.<\/p>\n"
                    }]
                  },
                  "tigergraphdriver": {
                    "ownKey": "tigergraphdriver",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/drivers/tigergraphdriver",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers/tigergraphdriver"
                      },
                      "description": "",
                      "title": "TigerGraphDriver",
                      "content": "<p>The driver used to connect to a remote TigerGraph instance.<\/p>hostname\n<p>The TigerGraph REST++ server hostname.<\/p>\nusername\n<p>The TigerGraph GSQL server password.<\/p>\npassword\n<p>The TigerGraph GSQL server username.<\/p>\nrestPpPort\n<p>The TigerGraph REST++ server port number.<\/p>\ngsqlPort\n<p>The TigerGraph GSQL server port number.<\/p>\nsecure\n<p>The TigerGraph REST++ server security status. Used for determining the protocol used between HTTPS or HTTP.<\/p>\nauthKey\n<p>The authorization key used for TigerGraph servers with token authorization turned on. This is placed under\nthe Authorization header when making requests.<\/p>\nhostname\n<p>Set the hostname for the TigerGraph REST++ server.<\/p>\nusername\n<p>Set the hostname for the TigerGraph GSQL server.<\/p>\npassword\n<p>Set the password for the TigerGraph GSQL server.<\/p>\nrestPpPort\n<p>Set the port for the TigerGraph REST++ server.<\/p>\ngsqlPort\n<p>Set the port for the TigerGraph GSQL server.<\/p>\nsecure\n<p>Sets the secure flag when building the API path.<\/p>\nauthKey\n<p>Sets the authorization token used in requests.<\/p><p>An example of where this is used is in\n<a href=\"https://docs-beta.tigergraph.com/cloud/tigergraph-cloud-faqs\">TigerGraph Cloud<\/a>.<\/p>\naddVertex\n<p>Inserts a vertex in the graph database.<\/p>\nexists\n<p>Checks if the given <a href=\"#\">NewNodeBuilder<\/a> exists in the database.<\/p>\nexists\n<p>Checks if there exists a directed edge of the given label between two <a href=\"#\">NewNodeBuilder<\/a> vertices.<\/p>\naddEdge\n<p>Creates an edge with the given label between two <a href=\"#\">NewNodeBuilder<\/a> vertices in the graph database.\nIf the given vertices are not already present in the database, they are created. If the edge already exists\nit wil not be recreated.<\/p>\ngetWholeGraph\n<p>Returns the whole CPG as a <a href=\"#\">Graph<\/a> object. Depending on the size of the CPG, this may be very memory\nintensive and usually a bad idea to call.<\/p>\ngetMethod\n<p>Given the full signature of a method, returns the subgraph of the method body.<\/p>\ngetMethodNames\n<p>Obtains all method full names in the CPG. These can be used in  IDriver.getMethod .<\/p>\ngetProgramStructure\n<p>Obtains all program structure related vertices. These are NAMESPACE_BLOCK, FILE, and TYPE_DECL vertices.<\/p>\ngetProgramTypeData\n<p>Obtains all the type references, declarations, and arguments of a program to their children and referenced\nvertices.<\/p>\ngetNeighbours\n<p>Given a vertex, returns a <a href=\"#\">Graph<\/a> representation of neighbouring vertices.<\/p>\ndeleteVertex\n<p>Given a vertex, will remove it from the graph if present.<\/p>\ndeleteEdge\n<p>Given two vertices and an edge label.<\/p>\ndeleteMethod\n<p>Given the full signature of a method, removes the method and its body from the graph.<\/p>\nupdateVertexProperty\n<p>Updates a vertex's property if the node exists.<\/p>\ngetMetaData\n<p>Obtains the graph meta data information, if found.<\/p>\ngetVerticesByProperty\n<p>Attempts to get vertex by it's fullname property.<\/p>\ngetPropertyFromVertices\n<p>Get a list of the results from a given property in vertices.<\/p>\ngetVertexIds\n<p>Given a lower bound and an upper bound, return all vertex IDs which fall between these ranges in the database.<\/p>\nclose\n<p>clearGraph<\/p>\n<p>Clears the graph of all vertices and edges.<\/p>\nbuildSchema\n<p>Uses the generated schema from  TigerGraphDriver.buildSchemaPayload  and remotely executes it on the database.\nThis is done via the GSQL server using the GSQL client.<\/p><p><b>See Also:<\/b> <a href=\"https://docs.tigergraph.com/dev/using-a-remote-gsql-client\">Using a Remote GSQL Client<\/a><\/p>\nbuildSchemaPayload\n<p>Builds the schema from generated CPG code and returns it as a String to be executed on the database.<\/p>\n"
                    }]
                  },
                  "graphdatabase": {
                    "ownKey": "graphdatabase",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/drivers/graphdatabase",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers/graphdatabase"
                      },
                      "description": "",
                      "title": "GraphDatabase",
                      "content": "<p>The graph databases supported by Plume's  IDriver s.<\/p>TINKER_GRAPH\n<p>An in-memory graph database queried using Gremlin.<\/p>\nJANUS_GRAPH\n<p>An open-source graph database with various search engine and storage backend options. This is queried using\nGremlin.<\/p>\nTIGER_GRAPH\n<p>An enterprise graph database communicated over via REST and queried using GSQL.<\/p>\nNEPTUNE\n<p>Amazon Neptune is a fast, reliable graph database service that makes it easy to build and run applications that\nwork with highly connected datasets. This is queried using Gremlin.<\/p>\nNEO4J\n<p>Neo4j is the graph database platform powering mission-critical enterprise applications like artificial\nintelligence, fraud detection and recommendations.<\/p>\nOVERFLOWDB\n<p>ShiftLeft's OverflowDB is an in-memory graph database, which implements a swapping mechanism to deal\nwith large graphs.<\/p>\n"
                    }]
                  },
                  "idriver": {
                    "ownKey": "idriver",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/drivers/idriver",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers/idriver"
                      },
                      "description": "",
                      "title": "IDriver",
                      "content": "<p>The minimal interface for all graph drivers.<\/p>addVertex\n<p>Inserts a vertex in the graph database.<\/p>\nexists\n<p>Checks if the given <a href=\"#\">NewNodeBuilder<\/a> exists in the database.<\/p>\nexists\n<p>Checks if there exists a directed edge of the given label between two <a href=\"#\">NewNodeBuilder<\/a> vertices.<\/p>\naddEdge\n<p>Creates an edge with the given label between two <a href=\"#\">NewNodeBuilder<\/a> vertices in the graph database.\nIf the given vertices are not already present in the database, they are created. If the edge already exists\nit wil not be recreated.<\/p>\nclearGraph\n<p>Clears the graph of all vertices and edges.<\/p>\ngetWholeGraph\n<p>Returns the whole CPG as a <a href=\"#\">Graph<\/a> object. Depending on the size of the CPG, this may be very memory\nintensive and usually a bad idea to call.<\/p>\ngetMethod\n<p>Given the full signature of a method, returns the subgraph of the method body.<\/p>\ngetMethodNames\n<p>Obtains all method full names in the CPG. These can be used in  IDriver.getMethod .<\/p>\ngetProgramStructure\n<p>Obtains all program structure related vertices. These are NAMESPACE_BLOCK, FILE, and TYPE_DECL vertices.<\/p>\ngetProgramTypeData\n<p>Obtains all the type references, declarations, and arguments of a program to their children and referenced\nvertices.<\/p>\ngetNeighbours\n<p>Given a vertex, returns a <a href=\"#\">Graph<\/a> representation of neighbouring vertices.<\/p>\ndeleteVertex\n<p>Given a vertex, will remove it from the graph if present.<\/p>\ndeleteMethod\n<p>Given the full signature of a method, removes the method and its body from the graph.<\/p>\ndeleteEdge\n<p>Given two vertices and an edge label.<\/p>\nupdateVertexProperty\n<p>Updates a vertex's property if the node exists.<\/p>\ngetMetaData\n<p>Obtains the graph meta data information, if found.<\/p>\ngetVerticesByProperty\n<p>Attempts to get vertex by it's fullname property.<\/p>\ngetPropertyFromVertices\n<p>Get a list of the results from a given property in vertices.<\/p>\n"
                    }]
                  },
                  "ioverrideniddriver": {
                    "ownKey": "ioverrideniddriver",
                    "ownPages": [{
                      "reference": {
                        "path": "kotlindoc",
                        "baseUrl": "https://plume-oss.github.io/plume",
                        "fileName": "io/github/plume/oss/drivers/ioverrideniddriver",
                        "extension": "html",
                        "usePrettyUrl": true,
                        "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers/ioverrideniddriver"
                      },
                      "description": "",
                      "title": "IOverridenIdDriver",
                      "content": "<p>Interface for drivers on top of databases which don't use Long IDs by default and need to be overridden.<\/p>getVertexIds\n<p>Given a lower bound and an upper bound, return all vertex IDs which fall between these ranges in the database.<\/p>\n"
                    }]
                  }
                },
                "ownPages": [{
                  "reference": {
                    "path": "kotlindoc",
                    "baseUrl": "https://plume-oss.github.io/plume",
                    "fileName": "io/github/plume/oss/drivers",
                    "extension": "html",
                    "usePrettyUrl": true,
                    "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss/drivers"
                  },
                  "description": "",
                  "title": "io.github.plume.oss.drivers",
                  "content": "<p>DriverFactory<\/p>\n<p>The factory responsible for obtaining the desired  IDriver .<\/p>\nGraphDatabase\n<p>The graph databases supported by Plume's  IDriver s.<\/p>\nGremlinDriver\n<p>The driver used by remote Gremlin connections.<\/p>\nGremlinOverriddenIdDriver\n<p>IDriver<\/p>\n<p>The minimal interface for all graph drivers.<\/p>\nIOverridenIdDriver\n<p>Interface for drivers on top of databases which don't use Long IDs by default and need to be overridden.<\/p>\nISchemaSafeDriver\n<p>Interface for drivers on top of databases that allow for schemas to be set.<\/p>\nJanusGraphDriver\n<p>The driver used to connect to a remote JanusGraph instance.<\/p>\nNeo4jDriver\n<p>The driver used to connect to a remote Neo4j instance.<\/p>\nNeptuneDriver\n<p>The driver used to connect to a remote Amazon Neptune instance.<\/p>\nOverflowDbDriver\n<p>Driver to create an OverflowDB database file from Plume's domain classes.<\/p>\nTigerGraphDriver\n<p>The driver used to connect to a remote TigerGraph instance.<\/p>\nTinkerGraphDriver\n<p>The driver used to connect to an in-memory TinkerGraph instance.<\/p>\n"
                }]
              }
            },
            "ownPages": [{
              "reference": {
                "path": "kotlindoc",
                "baseUrl": "https://plume-oss.github.io/plume",
                "fileName": "io/github/plume/oss",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://plume-oss.github.io/plume/kotlindoc/io/github/plume/oss"
              },
              "description": "",
              "title": "io.github.plume.oss",
              "content": "<p>Extractor<\/p>\n<p>The main entrypoint of the extractor from which the CPG will be created.<\/p>\nGlobalCache\n<p>A cache to reduce read calls to the database.<\/p>\nio.github.plume.oss.domain.exceptions\n<p>io.github.plume.oss.domain.files<\/p>\n<p>io.github.plume.oss.domain.mappers<\/p>\n<p>io.github.plume.oss.drivers<\/p>\n<p>io.github.plume.oss.graphio<\/p>\n<p>io.github.plume.oss.metrics<\/p>\n<p>io.github.plume.oss.options<\/p>\n<p>io.github.plume.oss.passes<\/p>\n<p>io.github.plume.oss.util<\/p>\n"
            }]
          }}
        }}
      }}
    }},
    "ownPages": [{
      "reference": {
        "path": "kotlindoc",
        "baseUrl": "https://plume-oss.github.io/plume",
        "fileName": "",
        "extension": "html",
        "usePrettyUrl": true,
        "link": "https://plume-oss.github.io/plume/kotlindoc"
      },
      "description": "",
      "title": "README",
      "content": "<h1 id=\"plume\"><a href=\"#plume\" id=\"plume\" class=\"anchor\"><\/a>Plume<\/h1>\n<p><a href=\"https://opensource.org/licenses/Apache-2.0\"><img src=\"https://img.shields.io/badge/License-Apache%202.0-blue.svg\" alt=\"License\" /><\/a>\n<img src=\"https://github.com/plume-oss/plume/workflows/CI/badge.svg\" alt=\"GitHub Actions\" />\n<a href=\"https://codecov.io/gh/plume-oss/plume\"><img src=\"https://codecov.io/gh/plume-oss/plume/branch/master/graph/badge.svg?token=4WY0U6QCU6\" alt=\"codecov\" /><\/a>\n<a href=\"https://jitpack.io/#plume-oss/plume\"><img src=\"https://jitpack.io/v/plume-oss/plume.svg\" alt=\"\" /><\/a><\/p>\n<p>A Kotlin driver for the Plume library to provide an interface for connecting and writing to various graph databases based\non the <a href=\"https://github.com/ShiftLeftSecurity/codepropertygraph/blob/master/codepropertygraph/src/main/resources/schemas/base.json\">code-property graph schema<\/a>.<\/p>\n<p>For more documentation check out the <a href=\"https://plume-oss.github.io/plume-docs/\">Plume docs<\/a>.<\/p>\n<h2 id=\"adding-plume-as-a-dependency\"><a href=\"#adding-plume-as-a-dependency\" id=\"adding-plume-as-a-dependency\" class=\"anchor\"><\/a>Adding Plume as a Dependency<\/h2>\n<p>Replace <code>X.X.X<\/code> with the desired version on <a href=\"https://jitpack.io/#plume-oss/plume\">JitPack<\/a>.<\/p>\n<p>Maven:<\/p>\n<pre><code class=\"language-mxml\">&lt;dependency&gt;\n  &lt;groupId&gt;io.github.plume-oss&lt;/groupId&gt;\n  &lt;artifactId&gt;plume&lt;/artifactId&gt;\n  &lt;version&gt;X.X.X&lt;/version&gt;\n  &lt;type&gt;pom&lt;/type&gt;\n&lt;/dependency&gt;\n<\/code><\/pre>\n<p>Gradle:<\/p>\n<pre><code class=\"language-groovy\">implementation 'io.github.plume-oss:plume:X.X.X'\n<\/code><\/pre>\n<p>Don't forget to include the JCenter and JitPack repository in your <code>pom.xml<\/code> or <code>build.gradle<\/code>.<\/p>\n<p>Maven:<\/p>\n<pre><code class=\"language-mxml\">&lt;project&gt;\n  [...]\n  &lt;repositories&gt;\n    &lt;repository&gt;\n      &lt;id&gt;jcenter&lt;/id&gt;\n      &lt;name&gt;jcenter&lt;/name&gt;\n      &lt;url&gt;https://jcenter.bintray.com&lt;/url&gt;\n    &lt;/repository&gt;\n    &lt;repository&gt;\n      &lt;id&gt;jitpack&lt;/id&gt;\n      &lt;name&gt;jitpack&lt;/name&gt;\n      &lt;url&gt;https://jitpack.io&lt;/url&gt;\n    &lt;/repository&gt;\n  &lt;/repositories&gt;\n  [...]\n&lt;/project&gt;\n<\/code><\/pre>\n<p>Gradle:<\/p>\n<pre><code class=\"language-groovy\">repositories {\n    jcenter()\n    maven { url &quot;https://jitpack.io&quot; }\n}\n<\/code><\/pre>\n<h2 id=\"building-from-source\"><a href=\"#building-from-source\" id=\"building-from-source\" class=\"anchor\"><\/a>Building from Source<\/h2>\n<p>Plume releases are available on JitPack. If downloading from JitPack\nis not an option, or you would like to depend on a modified version of\nPlume, you can build Plume locally and use it as an unmanaged\ndependency. JDK version 11 or higher is required.<\/p>\n<pre><code class=\"language-shell\">git clone https://github.com/plume-oss/plume.git\ncd plume\n./gradlew jar\n<\/code><\/pre>\n<p>This will build <code>build/libs/plume-X.X.X.jar<\/code> which can be imported into your local project.<\/p>\n<h2 id=\"dependencies\"><a href=\"#dependencies\" id=\"dependencies\" class=\"anchor\"><\/a>Dependencies<\/h2>\n<h3 id=\"packages\"><a href=\"#packages\" id=\"packages\" class=\"anchor\"><\/a>Packages<\/h3>\n<p>The following packages used for logging:<\/p>\n<pre><code class=\"language-groovy\">implementation 'org.apache.logging.log4j:log4j-core'\nimplementation 'org.apache.logging.log4j:log4j-slf4j-impl'\n<\/code><\/pre>\n<p>The extractor uses the following dependencies:<\/p>\n<pre><code class=\"language-groovy\">implementation 'org.soot-oss:soot'\nimplementation 'org.lz4:lz4-java'\n<\/code><\/pre>\n<p>Dependencies per graph database technology:<\/p>\n<h4 id=\"tinkergraph\"><a href=\"#tinkergraph\" id=\"tinkergraph\" class=\"anchor\"><\/a><em>TinkerGraph<\/em><\/h4>\n<pre><code class=\"language-groovy\">implementation 'org.apache.tinkerpop:gremlin-core'\nimplementation 'org.apache.tinkerpop:tinkergraph-gremlin'\n<\/code><\/pre>\n<h4 id=\"overflowdb\"><a href=\"#overflowdb\" id=\"overflowdb\" class=\"anchor\"><\/a><em>OverflowDb<\/em><\/h4>\n<pre><code class=\"language-groovy\">implementation 'io.shiftleft:codepropertygraph_2.13'\nimplementation 'io.shiftleft:semanticcpg_2.13'\n<\/code><\/pre>\n<h4 id=\"janusgraph\"><a href=\"#janusgraph\" id=\"janusgraph\" class=\"anchor\"><\/a><em>JanusGraph<\/em><\/h4>\n<pre><code class=\"language-groovy\">implementation 'org.apache.tinkerpop:gremlin-core'\nimplementation 'org.janusgraph:janusgraph-driver'\n<\/code><\/pre>\n<h4 id=\"tigergraph\"><a href=\"#tigergraph\" id=\"tigergraph\" class=\"anchor\"><\/a><em>TigerGraph<\/em><\/h4>\n<pre><code class=\"language-groovy\">implementation 'khttp:khttp'\nimplementation 'com.fasterxml.jackson.core:jackson-databind'\n<\/code><\/pre>\n<h4 id=\"amazon-neptune\"><a href=\"#amazon-neptune\" id=\"amazon-neptune\" class=\"anchor\"><\/a><em>Amazon Neptune<\/em><\/h4>\n<pre><code class=\"language-groovy\">  implementation 'org.apache.tinkerpop:gremlin-core'\n  implementation 'org.apache.tinkerpop:gremlin-driver'\n<\/code><\/pre>\n<h4 id=\"neo4j\"><a href=\"#neo4j\" id=\"neo4j\" class=\"anchor\"><\/a><em>Neo4j<\/em><\/h4>\n<pre><code class=\"language-groovy\">implementation 'org.neo4j.driver:neo4j-java-driver'\n<\/code><\/pre>\n<p>Note that if you are connecting to Neo4j, for example, you would not need the TinkerGraph, TigerGraph, etc.\ndependencies.<\/p>\n<h2 id=\"logging\"><a href=\"#logging\" id=\"logging\" class=\"anchor\"><\/a>Logging<\/h2>\n<p>All logging can be configured under <code>src/main/resources/log4j2.properties<\/code>. By default, all logs can be found under\n<code>$TEMP/plume<\/code>.<\/p>\n"
    }]
  }}
}